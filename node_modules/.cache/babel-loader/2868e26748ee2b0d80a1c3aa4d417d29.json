{"ast":null,"code":"var _jsxFileName = \"/Users/yaselff/Dropbox/Mac/Desktop/chat/chat_application/src/components/ChatFeed.jsx\";\nimport MessageForm from './MessageForm';\nimport MyMessage from './myMessage';\nimport TheirMessage from './TheirMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n  console.log(chat, userName, messages);\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-reciepts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    });\n    console.log(keys);\n  };\n\n  renderMessages();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ChatFeed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/Users/yaselff/Dropbox/Mac/Desktop/chat/chat_application/src/components/ChatFeed.jsx"],"names":["MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","console","log","renderMessages","keys","Object","map","key","index","message","lastMessageKey","isMyMessage","sender","username","width"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAA2CJ,KAAjD;AAEA,QAAMK,IAAI,GAAGJ,KAAK,IAAIA,KAAK,CAACC,UAAD,CAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBF,QAAlB,EAA4BC,QAA5B;;AAEA,QAAMI,cAAc,GAAG,MAAM;AACzB,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,QAAZ,CAAb;AAEA,WAAOK,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,YAAMC,OAAO,GAAGV,QAAQ,CAACQ,GAAD,CAAxB;AACA,YAAMG,cAAc,GAAGF,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqBJ,IAAI,CAACI,KAAK,GAAG,CAAT,CAAhD;AACA,YAAMG,WAAW,GAAGb,QAAQ,KAAKW,OAAO,CAACG,MAAR,CAAeC,QAAhD;AAEA,0BACI;AAA0B,QAAA,KAAK,EAAG;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBAEQH,WAAW,gBACT,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADS,gBAET,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA,SAAW,OAAMH,KAAM,EAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KApBM,CAAP;AAqBAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,GAzBD;;AA2BAD,EAAAA,cAAc;AACd,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCD;;KAAMT,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import MessageForm from './MessageForm';\nimport MyMessage from './myMessage';\nimport TheirMessage from './TheirMessage';\n\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages} = props;\n\n    const chat = chats && chats[activeChat]\n    console.log(chat, userName, messages);\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n\n        return keys.map((key, index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\n            const isMyMessage = userName === message.sender.username;\n\n            return (\n                <div key={`msg_${index}`} style= {{ width: '100%' }}>\n                    <div className='message-block'>\n                        {\n                            isMyMessage\n                            ? <MyMessage/>\n                            : <TheirMessage/>\n                        }\n\n                    </div>\n                    <div className=\"read-reciepts\">\n\n                    </div>\n                </div>\n            );\n        })\n        console.log(keys)\n    }\n\n    renderMessages()\n    return (\n        <div>\n            ChatFeed\n        </div>\n    );\n}\n\nexport default ChatFeed;\n"]},"metadata":{},"sourceType":"module"}